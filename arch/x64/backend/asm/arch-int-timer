	bits 64
	inc r15

init:	; ( handler rbp rsp -- )
	mov rax, qword [rbp-8]
	mov qword [rel handler_rsp], rax
	mov rax, qword [rbp-16]
    mov qword [rel handler_rbp], rax
	mov rax, qword [rbp-24]
    mov qword [rel handler], rax

	sub rbp, 16
	call .l
.l:	pop rax
	add rax, (irq_handler - .l)
	mov qword [rbp-8], rax
	ret

irq_handler:
	push rax
	push rbx
	push rcx
	push rdx
	push rsi
	push rdi
	push rbp
	mov rax, rsp

	mov rbp, qword [rel handler_rbp]
	mov qword [rbp], rsp
	add rbp, 8

	mov rsp, qword [rel handler_rsp]
	mov rax, qword [rel handler]

	call rax

	mov rax, qword [rbp-8]
	sub rbp, 8

.ret:
	mov rsp, rax
	pop rbp
	pop rdi
	pop rsi
	pop rdx
	pop rcx
	pop rbx
	pop rax

	push rax
	mov al, 0x20
	out 0x20, al
	pop rax

	iretq

handler:
	dq 0

handler_rbp:
	dq 0

handler_rsp:
	dq 0
